@{
    ViewBag.Title = "Index";
}

<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Exec Crono</title>
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,700" rel="stylesheet">

    <style>
        #cronometro {
            font-size: 24px;
            font-weight: bold;
            color: white;
            background-color: black;
            border-radius: 4px;
            padding: 20px;
            display: inline-block;
            width: 180px;
            max-width: 100%;
        }
    </style>
</head>

<body>
    <p>3) Faça funcionar o crônometro abaixo. O formato está em horas, minutos, segundos e milisegundos.</p>
    <div id="cronometro">00:00:00 000</div>
    <br><br>
    <button id="comecar_parar">Começar</button>
    <button id="zerar">Zerar</button>
</body>

<script>
    // variáveis
    let iniciado = false;
    let horaInicio;
    let tempoPassado
    let initCronometro;

    const btnComecarParar = document.getElementById('comecar_parar');
    const btnComecarZerar = document.getElementById('zerar');
    const visorCronometro = document.getElementById('cronometro');

    // Funções
    const changeBtnLabel = (btn, label = '') => {
        if (label) btn.innerHTML = label;
        return btn;
    }

    function add_left_zero(number) { // OU const add_left_zero = (number) => {
        if (number < 10) {
            return '0' + number.toString(); // OU return `0${number.toString()}`;
        } else {
            return number.toString();
        }
    }

    const calcularTempo = () => {
        const horaAtual = new Date().getTime();
        tempoPassado = horaAtual - horaInicio;

        const horas = Math.floor(tempoPassado / 3600000);
        let resto = tempoPassado - (horas * 3600000);

        const minutos = Math.floor(resto / 60000);
        resto -= (minutos * 60000);

        const segundos = Math.floor(resto / 1000);
        resto -= (segundos * 1000);

        const milisegundos = resto;

        visorCronometro.innerHTML = `${add_left_zero(horas)}:${add_left_zero(minutos)}:${add_left_zero(segundos)} ${add_left_zero(milisegundos)}`;
    }

    const iniciarCronometro = () => {
        iniciado = true;
        changeBtnLabel(btnComecarParar, 'Parar');

        if (!horaInicio) {
            horaInicio = new Date().getTime();
        } else {
            horaInicio = new Date().getTime() - tempoPassado;
        }

        initCronometro = window.setInterval(calcularTempo, 10);
    }

    const pausarCronometro = () => {
        iniciado = false;
        changeBtnLabel(btnComecarParar, 'Começar');
        window.clearInterval(initCronometro);
    }

    const zerarCronometro = () => {
        pausarCronometro();

        tempoPassado = 0;
        horaInicio = new Date().getTime();
        visorCronometro.innerHTML = "00:00:00 000";
    }

    // Event handlers
    btnComecarParar.onclick = () => {
        if (!iniciado) {
            iniciarCronometro();
        } else {
            pausarCronometro();
        }
    };

    btnComecarZerar.onclick = () => {
        zerarCronometro();
    }
</script>

</html>

@RenderBody();